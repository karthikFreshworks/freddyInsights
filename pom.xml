<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.freshworks.freddy</groupId>
	<artifactId>freddyInsights</artifactId>
	<version>${revision}${changelist}</version>
	<name>freddyInsights</name>
	<description>Freddy platform to manage all AI apis</description>
	<properties>
		<revision>1.1.0</revision>
		<java.version>21</java.version>
		<changelist>-SNAPSHOT</changelist>
		<nexusUrl>http://nexus.runway.ci:32000</nexusUrl>
		<jacoco.version>0.8.11</jacoco.version>
		<lombok.version>1.18.30</lombok.version>
		<mapstruct.version>1.5.1.Final</mapstruct.version>
		<spring-cloud.version>2023.0.1</spring-cloud.version>
		<redis-client.version>4.4.3</redis-client.version>
		<opensearch-client.version>2.7.0</opensearch-client.version>
		<http-client.version>5.2.1</http-client.version>
		<okhttp.version>4.12.0</okhttp.version>
		<jakarta.version>6.0.0</jakarta.version>
		<google-api.version>1.31.1</google-api.version>
		<spring-doc.version>2.2.0</spring-doc.version>
		<opentelemetry.version>0.17.0</opentelemetry.version>
		<common-io.version>2.11.0</common-io.version>
		<apache-common.version>3.13.0</apache-common.version>
		<josson.version>1.4.5</josson.version>
		<micrometer-core.version>1.15.0-RC1</micrometer-core.version>
		<methonal.version>1.7.0</methonal.version>
		<codehaus.version>3.1.2</codehaus.version>
		<json.version>20231013</json.version>
		<maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
		<flatten-maven-plugin.version>1.1.0</flatten-maven-plugin.version>
		<checkstyle-maven-plugin.version>3.1.0</checkstyle-maven-plugin.version>
		<mvel-version>2.5.1.Final</mvel-version>
		<aws-java-sdk.version>1.11.767</aws-java-sdk.version>
		<sonar.coverage.exclusions>
			**/com/freshworks/freddy/ai/platform/constant/**
		</sonar.coverage.exclusions>
		<wiremock.version>3.5.2</wiremock.version>
	</properties>
	<profiles>
		<profile>
			<id>local</id>
			<properties>
				<nexusUrl>https://nexuscentral.runwayci.com</nexusUrl>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<!-- springframework -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-java21</artifactId>
			<version>1.14.5</version>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-core</artifactId>
			<version>${micrometer-core.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>android-json</artifactId>
					<groupId>com.vaadin.external.google</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.opensearch.client</groupId>
			<artifactId>opensearch-rest-high-level-client</artifactId>
			<version>${opensearch-client.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.retry</groupId>
			<artifactId>spring-retry</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>${redis-client.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- RestTemplate httpclient -->
		<dependency>
			<groupId>org.apache.httpcomponents.client5</groupId>
			<artifactId>httpclient5</artifactId>
			<version>${http-client.version}</version>
		</dependency>
		<!-- HTTP Request logging-->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${common-io.version}</version>
		</dependency>
		<!-- open-telemetry-api-->
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-api</artifactId>
			<version>${opentelemetry.version}</version>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-extension-annotations</artifactId>
			<version>${opentelemetry.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>1.10.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${apache-common.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.4</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>${json.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>${spring-doc.version}</version>
		</dependency>
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>${jakarta.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.octomix.josson</groupId>
			<artifactId>josson</artifactId>
			<version>${josson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.api-client</groupId>
			<artifactId>google-api-client</artifactId>
			<version>${google-api.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.mizosoft.methanol</groupId>
			<artifactId>methanol</artifactId>
			<version>${methonal.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.janino</groupId>
			<artifactId>janino</artifactId>
			<version>${codehaus.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.5.14</version>
		</dependency>
		<dependency>
			<groupId>org.mvel</groupId>
			<artifactId>mvel2</artifactId>
			<version>${mvel-version}</version>
		</dependency>
		<dependency>
			<groupId>org.wiremock</groupId>
			<artifactId>wiremock-jetty12</artifactId>
			<version>${wiremock.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-annotations</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-databind</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
		</dependency>
		<!-- AWS Dependencies-->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-resourcegroupstaggingapi</artifactId>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-sts</artifactId>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.amazonaws</groupId>
				<artifactId>aws-java-sdk-bom</artifactId>
				<version>${aws-java-sdk.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<distributionManagement>
		<repository>
			<id>nexus</id>
			<name>Releases</name>
			<url>${nexusUrl}/repository/maven-releases/</url>
		</repository>
		<snapshotRepository>
			<id>nexus</id>
			<name>Snapshot</name>
			<url>${nexusUrl}/repository/maven-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>nexusml</id>
			<name>ml-maven-repo</name>
			<url>${nexusUrl}/repository/ml-maven-repo/</url>
		</repository>
	</repositories>
	<build>

		<plugins>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.9.1.2184</version>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>com.freshworks.freddy.insights.FreddyAiPlatformApplication
							</mainClass> <!-- Update if needed -->
						</manifest>
					</archive>
				</configuration>
			</plugin>
<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-checkstyle-plugin</artifactId>-->
<!--				<version>${checkstyle-maven-plugin.version}</version>-->
<!--				<configuration>-->
<!--&lt;!&ndash;					<configLocation>/src/main/resources/checkstyle.xml</configLocation>&ndash;&gt;-->
<!--					<consoleOutput>true</consoleOutput>-->
<!--					<failsOnError>true</failsOnError>-->
<!--					<violationSeverity>warning</violationSeverity>-->
<!--					<failOnViolation>true</failOnViolation>-->
<!--					<linkXRef>false</linkXRef>-->
<!--					<excludes>${basedir}/src/main/resources/logback.xml</excludes>-->
<!--				</configuration>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<id>validate</id>-->
<!--						<phase>validate</phase>-->
<!--						<goals>-->
<!--							<goal>check</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>${flatten-maven-plugin.version}</version>
				<configuration>
					<updatePomFile>true</updatePomFile>
					<flattenMode>resolveCiFriendliesOnly</flattenMode>
				</configuration>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.1.2</version> <!-- Use the latest version -->
				<configuration>
					<argLine>${surefireArgLine}</argLine> <!-- Required for JaCoCo -->
					<includes>
						<include>**/*Test.java</include> <!-- Include test classes -->
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco.exec</destFile>
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>report</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>21</source>
					<target>21</target>
					<compilerArgs>
						--enable-preview
					</compilerArgs>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
